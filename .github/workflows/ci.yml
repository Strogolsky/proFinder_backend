name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

permissions:
  contents: read
  pull-requests: read

defaults:
  run:
    shell: bash

jobs:
  # ------------------------------------------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21 + Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Build for downstream jobs
        run: mvn -B clean verify -Dmaven.test.skip=true

      - name: Upload compiled classes artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-classes
          if-no-files-found: error
          retention-days: 1
          path: |
            **/target/classes
            **/target/test-classes
  # ------------------------------------------------------------------
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Run tests
        run: mvn -B test
  # ------------------------------------------------------------------
  checkstyle:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Run Checkstyle
        run: mvn -B checkstyle:checkstyle
  # ------------------------------------------------------------------
  sonar:
    runs-on: ubuntu-latest
    needs: [ build, test, checkstyle ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Download compiled classes artifact
        uses: actions/download-artifact@v4
        with:
          name: compiled-classes
          path: ./classes

      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.java.binaries=./classes
            -Dsonar.java.test.binaries=./classes

      - name: Sonar Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
